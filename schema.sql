-- MySQL Script generated by MySQL Workbench
-- Mon Sep 29 11:28:28 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema itunes
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema itunes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `itunes` DEFAULT CHARACTER SET utf8 ;
USE `itunes` ;

-- -----------------------------------------------------
-- Table `itunes`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Genre` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Song` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `Genre_ID` INT NOT NULL,
  `download_count` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `fk_Song_Genre1_idx` (`Genre_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Song_Genre1`
    FOREIGN KEY (`Genre_ID`)
    REFERENCES `itunes`.`Genre` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Authorization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Authorization` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(24) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Label`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Label` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Profile_creator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Profile_creator` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `user_ID` INT NOT NULL,
  `picture_link` VARCHAR(150) NULL,
  `bio` VARCHAR(500) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Creator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Creator` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `release_date` DATETIME NOT NULL,
  `Authorization_ID` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `Label_ID` INT NOT NULL,
  `Profile_creator_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Profile_creator_ID`),
  INDEX `fk_Creator_Authorization1_idx` (`Authorization_ID` ASC) VISIBLE,
  INDEX `fk_Creator_Label1_idx` (`Label_ID` ASC) VISIBLE,
  INDEX `fk_Creator_Profile_creator1_idx` (`Profile_creator_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Creator_Authorization1`
    FOREIGN KEY (`Authorization_ID`)
    REFERENCES `itunes`.`Authorization` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Creator_Label1`
    FOREIGN KEY (`Label_ID`)
    REFERENCES `itunes`.`Label` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Creator_Profile_creator1`
    FOREIGN KEY (`Profile_creator_ID`)
    REFERENCES `itunes`.`Profile_creator` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Album` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `release_date` DATETIME NOT NULL,
  `Creator_ID` INT NOT NULL,
  `Creator_Profile_creator_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Creator_ID`, `Creator_Profile_creator_ID`),
  INDEX `fk_Album_Creator1_idx` (`Creator_ID` ASC, `Creator_Profile_creator_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Album_Creator1`
    FOREIGN KEY (`Creator_ID` , `Creator_Profile_creator_ID`)
    REFERENCES `itunes`.`Creator` (`ID` , `Profile_creator_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Profile_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Profile_user` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `user_ID` INT NOT NULL,
  `picture_link` VARCHAR(150) NULL,
  `bio` VARCHAR(500) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Subcription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Subcription` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `plan` VARCHAR(45) NOT NULL,
  `price` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `plan_UNIQUE` (`plan` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`User` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `Authorization_ID` INT NOT NULL,
  `Profile_user_ID` INT NOT NULL,
  `Subcription_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Authorization_ID`, `Profile_user_ID`),
  INDEX `fk_User_Authorization1_idx` (`Authorization_ID` ASC) VISIBLE,
  INDEX `fk_User_Profile_user1_idx` (`Profile_user_ID` ASC) VISIBLE,
  INDEX `fk_User_Subcription1_idx` (`Subcription_ID` ASC) VISIBLE,
  CONSTRAINT `fk_User_Authorization1`
    FOREIGN KEY (`Authorization_ID`)
    REFERENCES `itunes`.`Authorization` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Profile_user1`
    FOREIGN KEY (`Profile_user_ID`)
    REFERENCES `itunes`.`Profile_user` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Subcription1`
    FOREIGN KEY (`Subcription_ID`)
    REFERENCES `itunes`.`Subcription` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Download`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Download` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Song_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Download_Song1_idx` (`Song_ID` ASC) VISIBLE,
  INDEX `fk_Download_User1_idx` (`User_ID` ASC) VISIBLE,
  UNIQUE INDEX `Song_ID_UNIQUE` (`Song_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Download_Song1`
    FOREIGN KEY (`Song_ID`)
    REFERENCES `itunes`.`Song` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Download_User1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `itunes`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Song_has_Creator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Song_has_Creator` (
  `Song_ID` INT NOT NULL,
  `Creator_ID` INT NOT NULL,
  PRIMARY KEY (`Song_ID`, `Creator_ID`),
  INDEX `fk_Song_has_Creator_Creator1_idx` (`Creator_ID` ASC) VISIBLE,
  INDEX `fk_Song_has_Creator_Song1_idx` (`Song_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Song_has_Creator_Song1`
    FOREIGN KEY (`Song_ID`)
    REFERENCES `itunes`.`Song` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_has_Creator_Creator1`
    FOREIGN KEY (`Creator_ID`)
    REFERENCES `itunes`.`Creator` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`Song_has_Album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`Song_has_Album` (
  `Song_ID` INT NOT NULL,
  `Album_ID` INT NOT NULL,
  PRIMARY KEY (`Song_ID`, `Album_ID`),
  INDEX `fk_Song_has_Album_Album1_idx` (`Album_ID` ASC) VISIBLE,
  INDEX `fk_Song_has_Album_Song1_idx` (`Song_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Song_has_Album_Song1`
    FOREIGN KEY (`Song_ID`)
    REFERENCES `itunes`.`Song` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_has_Album_Album1`
    FOREIGN KEY (`Album_ID`)
    REFERENCES `itunes`.`Album` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`authorization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`authorization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`subscription` (
  `plan` VARCHAR(45) NOT NULL,
  `price` INT NULL DEFAULT 0,
  PRIMARY KEY (`plan`),
  UNIQUE INDEX `plan_UNIQUE` (`plan` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`user` (
  `authorization_id` INT NOT NULL,
  `name` INT NULL,
  `subscription_plan` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`authorization_id`),
  INDEX `fk_user_authorization1_idx` (`authorization_id` ASC) VISIBLE,
  INDEX `fk_user_subscription1_idx` (`subscription_plan` ASC) VISIBLE,
  CONSTRAINT `fk_user_authorization1`
    FOREIGN KEY (`authorization_id`)
    REFERENCES `itunes`.`authorization` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_subscription1`
    FOREIGN KEY (`subscription_plan`)
    REFERENCES `itunes`.`subscription` (`plan`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`user_profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`user_profile` (
  `user_authorization_id` INT NOT NULL,
  `picture_link` VARCHAR(100) NULL DEFAULT './default_picture',
  PRIMARY KEY (`user_authorization_id`),
  INDEX `fk_user_profile_user1_idx` (`user_authorization_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_profile_user1`
    FOREIGN KEY (`user_authorization_id`)
    REFERENCES `itunes`.`user` (`authorization_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`label`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`label` (
  `name` INT NOT NULL,
  PRIMARY KEY (`name`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`creator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`creator` (
  `authorization_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `label_name` INT NOT NULL,
  PRIMARY KEY (`authorization_id`),
  INDEX `fk_creator_label1_idx` (`label_name` ASC) VISIBLE,
  CONSTRAINT `fk_creator_authorization1`
    FOREIGN KEY (`authorization_id`)
    REFERENCES `itunes`.`authorization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_creator_label1`
    FOREIGN KEY (`label_name`)
    REFERENCES `itunes`.`label` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`creator_profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`creator_profile` (
  `creator_authorization_id` INT NOT NULL,
  `picture_link` VARCHAR(100) NULL DEFAULT './default_picture',
  PRIMARY KEY (`creator_authorization_id`),
  CONSTRAINT `fk_creator_profile_creator1`
    FOREIGN KEY (`creator_authorization_id`)
    REFERENCES `itunes`.`creator` (`authorization_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`album` (
  `creator_authorization_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `release_date` DATETIME NOT NULL,
  PRIMARY KEY (`creator_authorization_id`),
  CONSTRAINT `fk_album_creator1`
    FOREIGN KEY (`creator_authorization_id`)
    REFERENCES `itunes`.`creator` (`authorization_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`genre` (
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`name`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `genre_name` VARCHAR(45) NOT NULL,
  `link` VARCHAR(45) NOT NULL,
  `download_count` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_song_genre1_idx` (`genre_name` ASC) VISIBLE,
  CONSTRAINT `fk_song_genre1`
    FOREIGN KEY (`genre_name`)
    REFERENCES `itunes`.`genre` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`song_has_album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`song_has_album` (
  `song_id` INT NOT NULL,
  `album_creator_authorization_id` INT NOT NULL,
  PRIMARY KEY (`song_id`, `album_creator_authorization_id`),
  INDEX `fk_song_has_album_album1_idx` (`album_creator_authorization_id` ASC) VISIBLE,
  INDEX `fk_song_has_album_song1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_song_has_album_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `itunes`.`song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_song_has_album_album1`
    FOREIGN KEY (`album_creator_authorization_id`)
    REFERENCES `itunes`.`album` (`creator_authorization_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itunes`.`download`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itunes`.`download` (
  `user_authorization_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  PRIMARY KEY (`user_authorization_id`),
  INDEX `fk_download_user1_idx` (`user_authorization_id` ASC) VISIBLE,
  INDEX `fk_download_song1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_download_user1`
    FOREIGN KEY (`user_authorization_id`)
    REFERENCES `itunes`.`user` (`authorization_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_download_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `itunes`.`song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
